syntax = "proto3";

package todos.v1;

import "google/protobuf/timestamp.proto";
import "rbt/v1alpha1/options.proto";

////////////////////////////////////////////////////////////////////////

message Todo {
  option (rbt.v1alpha1.state) = {};
  
  TodoDetails details = 1;
}

////////////////////////////////////////////////////////////////////////

// Details of a `Todo` that we pass to e.g., front end.
message TodoDetails {
  string name = 1;
  bool done = 2;
  google.protobuf.Timestamp deadline = 3;
  bool warned = 4;
}

////////////////////////////////////////////////////////////////////////

service TodoInterface {
  // Returns the details of the todo.
  rpc Details(DetailsRequest) returns (DetailsResponse) {
    option (rbt.v1alpha1.method).reader = {};
  }

  // Initializes the todo.
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (rbt.v1alpha1.method).writer = {};
  }

  // Marks the todo as done.
  rpc Complete(CompleteRequest) returns (CompleteResponse) {
    option (rbt.v1alpha1.method).writer = {};
  }
}

////////////////////////////////////////////////////////////////////////

message TodoList {
  option (rbt.v1alpha1.state) = {};

  // List of all the `Todo`'s that are part of this todo list.
  repeated string todo_ids = 1;
}

////////////////////////////////////////////////////////////////////////

service TodoListInterface {
  // Creates a new `Todo` and adds it to this list. 
  rpc Add(AddRequest) returns (AddResponse) {
    option (rbt.v1alpha1.method).transaction = {};
  }

  // Removes an existing `Todo` from this list.
  rpc Remove(RemoveRequest) returns (RemoveResponse) {
    option (rbt.v1alpha1.method).writer = {};
  }

  // Returns all of `TodoDetails` for this todo list.
  rpc List(ListRequest) returns (ListResponse) {
    option (rbt.v1alpha1.method).reader = {};
  }
}

////////////////////////////////////////////////////////////////////////

message DetailsRequest {}

message DetailsResponse {
  TodoDetails details = 1;
}

////////////////////////////////////////////////////////////////////////

message CreateRequest {
  TodoDetails details = 1;
}

message CreateResponse {}

////////////////////////////////////////////////////////////////////////

message CompleteRequest {}

message CompleteResponse {}

////////////////////////////////////////////////////////////////////////

message AddRequest {
  TodoDetails details = 1;
}

message AddResponse {}

////////////////////////////////////////////////////////////////////////

message RemoveRequest {
  string todo_id = 1;
}

message RemoveResponse {}

////////////////////////////////////////////////////////////////////////

message ListRequest {}

message ListResponse {
  map<string, TodoDetails> details = 1;
}

////////////////////////////////////////////////////////////////////////
